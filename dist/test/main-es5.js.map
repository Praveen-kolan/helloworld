{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/todo/todo-list/todo-list.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/todo/todo-list/todo-list.component.css","./src/app/todo/todo-list/todo-list.component.ts","./src/app/todo/todoservice.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- <div class=\\\"container\\\">\\n<input type=\\\"checkbox\\\" [(ngModel)]=\\\"thecheckbox\\\" data-md-icheck (click)=\\\"tooggle($event)\\\">\\\\\\n<span *ngIf=\\\"marked\\\">completed</span>\\n</div> -->\\n\\n\\n<!-- <h2>Checkbox list example</h2>\\n\\n<ul>\\n\\t<li *ngFor=\\\"let item of list\\\">\\n    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"item.checked\\\">{{item.title}}\\n  </li>\\n</ul> -->\\n\\n\\n\\n<!-- <pre>{{this.result | json}}</pre> -->\\n\\n\\n<app-todo></app-todo>\"","module.exports = \"<div class=\\\"container\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <h1>User List</h1>\\n            <table class=\\\"table table-bordered table-striped table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th class=\\\"text-center\\\">ID</th>\\n                        <th class=\\\"text-center\\\">First Name</th>\\n                        <th class=\\\"text-center\\\">Last Name</th>\\n                        <th class=\\\"text-center\\\">&nbsp;</th>\\n                        <th class=\\\"text-center\\\">&nbsp;</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let user of users\\\">\\n                        <td>{{ user.id }}</td>\\n                        <td>{{ user.firstName }}</td>\\n                        <td>{{ user.lastName }}</td>\\n                        <div class=\\\"container\\\" >\\n                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"thecheckbox\\\" data-md-icheck (click)=\\\"tooggle($event)\\\">\\n                                <span *ngIf=\\\"marked\\\">completed</span>\\n                                </div>\\n    \\n                        <td>\\n                            <button class=\\\"btn btn-info mr-2\\\" (click)=\\\"showEditUserForm(user)\\\">\\n                                Edit\\n                            </button>\\n                            <button class=\\\"btn btn-danger\\\" (click)=\\\"removeUser(user)\\\">\\n                                X\\n                            </button>\\n                            \\n                        </td>\\n                        <td> \\n                                <!-- <div class=\\\"container\\\">\\n                                        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"thecheckbox\\\" data-md-icheck (click)=\\\"tooggle($event)\\\">\\n                                        <span *ngIf=\\\"marked\\\">completed</span>\\n                                        </div> -->\\n                        \\n                           \\n                            \\n                        \\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n    \\n\\n\\n\\n\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"showAddUserForm()\\\">+\\n            </button>\\n            <br />\\n            <br />\\n    \\n            <form *ngIf=\\\"userForm\\\">\\n                <h2>Add New User</h2>\\n                <p>First Name: <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"newUser.firstName\\\" /></p>\\n                <p>Last Name: <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"newUser.lastName\\\" /></p>\\n                <p>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary mr-2\\\" (click)=\\\"saveUser(newUser)\\\">Submit</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancelNewUser()\\\">Cancel</button>\\n                </p>\\n            </form>\\n    \\n            <form *ngIf=\\\"editUserForm\\\">\\n                <h2>Edit User Details</h2>\\n                <p>First Name: <input type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"editedUser.firstName\\\" /></p>\\n                <p>Last Name: <input type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"editedUser.lastName\\\" /></p>\\n                <p>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary mr-2\\\" (click)=\\\"updateUser(editedUser)\\\">Submit</button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"cancelEdits()\\\">Cancel</button>\\n                </p>\\n            </form>\\n        </div>\\n    </div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  list: any[];\n\n  ngOnInit() {\n    this.list = [\n      {\n        id: 1,\n        title: 'Администратор',\n        checked: true,\n      },\n      {\n        id: 2,\n        title: 'Пользователь',\n        checked: false,\n      },\n      {\n        id: 3,\n        title: 'Директор',\n        checked: true,\n      },\n      {\n        id: 4,\n        title: 'Начальник',\n        checked: false,\n      },\n    ]\n  }\n\n  get result() {\n    return this.list.filter(item => item.checked);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoListComponent } from './todo/todo-list/todo-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG9kby1saXN0L3RvZG8tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../todo.model';\nimport { TodoserviceService } from '../todoservice.service';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit {\n\n  users: User[];\n  userForm: boolean = false;\n  isNewUser: boolean;\n  newUser: any = {};\n  editUserForm: boolean = false;\n  editedUser: any = {};\n  \n  constructor(private userService: TodoserviceService) { }\n\n  marked=false;\n thecheckbox =false;\ntooggle(e){\n  this.marked =e.target.checked;\n //this.thecheckbox.addOrRemove(this.value);\n\n}\n  ngOnInit() {\n    this.users = this.getUsers();\n  }\n\n  getUsers(): User[] {\n    return this.userService.getUsersFromData();\n  }\n\n  showEditUserForm(user: User) {\n    if (!user) {\n      this.userForm = false;\n      return;\n    }\n    this.editUserForm = true;\n    this.editedUser = user;\n  }\n\n  showAddUserForm() {\n    // resets form if edited user\n    if (this.users.length) {\n      this.newUser = {};\n    }\n    this.userForm = true;\n    this.isNewUser = true;\n\n  }\n\n  saveUser(user: User) {\n    if (this.isNewUser) {\n      //add a new user\n      this.userService.addUser(user);\n    }\n    this.userForm = false;\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.editedUser);\n    this.editUserForm = false;\n    this.editedUser = {};\n  }\n\n  removeUser(user: User) {\n    this.userService.deleteUser(user);\n  }\n\n  cancelEdits() {\n    this.editedUser = {};\n    this.editUserForm = false;\n  }\n\n  cancelNewUser() {\n    this.newUser = {};\n    this.userForm = false;\n  }\n  checkbox(v){\n  // this.check = this.userService.checksend();\n  // console.log(this.check)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { User } from './todo.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoserviceService {\n\n  private upersons: User[] = [\n    {\n      id: 1,\n      firstName: 'Durgesh',\n      lastName: 'Pal'\n    },\n    {\n      id: 2,\n      firstName: 'Ankur',\n      lastName: 'Pal'\n    }\n  ]\n  constructor() { }\n\n \n\n  getUsersFromData(): User[] {\n    return this.upersons;\n  }\n\n  addUser(user: User) {\n    user.id = this.upersons.length + 1;\n    this.upersons.push(user);\n\n  }\n  updateUser(user: User) {\n    let index = this.upersons.findIndex(u => user.id === u.id);\n    this.upersons[index] = user;\n  }\n  deleteUser(user: User) {\n    this.upersons.splice(this.upersons.indexOf(user), 1);\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}